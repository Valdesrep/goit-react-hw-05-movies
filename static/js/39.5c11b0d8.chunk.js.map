{"version":3,"file":"static/js/39.5c11b0d8.chunk.js","mappings":"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","sources":["servises/Api.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/views/Movies/Movies.module.css?58de","views/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'eef69e4613a866add8ae298195f2ed87';\n\nasync function fetchTrending() {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nasync function fetchByQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nasync function fetchById(id) {\n  const url = `${BASE_URL}/movie/${id}}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n}\nasync function fetchCredits(id) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data.cast;\n}\nasync function fetchReviews(id) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nexport { fetchTrending, fetchByQuery, fetchById, fetchCredits, fetchReviews };\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchForm_SearchForm__jbIQn\",\"SearchFormButton\":\"SearchForm_SearchFormButton__ROHLz\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__D0dwe\",\"SearchFormInput\":\"SearchForm_SearchFormInput__jntvc\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport s from './SearchForm.module.css';\nimport Notiflix from 'notiflix';\nimport propTypes from 'prop-types';\n\nexport default function SearchForm({ onSubmit }) {\n  const [searchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const searchQuery = query.trim().toLocaleLowerCase();\n    if (searchQuery === '') {\n      Notiflix.Notify.failure('Please enter a request');\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  return (\n    <form className={s.SearchForm} onSubmit={handleSubmit}>\n      <input\n        name=\"query\"\n        onChange={handleChange}\n        className={s.SearchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search Movies\"\n        value={query}\n      />\n      <button type=\"submit\" className={s.SearchFormButton}>\n        <span className={s.SearchFormButtonLabel}>Search</span>\n      </button>\n    </form>\n  );\n}\nSearchForm.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n  inputQuery: propTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listHome\":\"Movies_listHome__48WlW\",\"itemHome\":\"Movies_itemHome__gVQKQ\",\"linkHome\":\"Movies_linkHome__oXnX-\",\"imgHome\":\"Movies_imgHome__EI+Iu\",\"titleHome\":\"Movies_titleHome__uvhMD\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { fetchByQuery } from '../../servises/Api';\nimport s from './Movies.module.css';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchByQuery(query).then(response => setFilms(response));\n  }, [query]);\n\n  const handleSubmitForm = query => {\n    setQuery(query);\n    setSearchParams({ query: query });\n  };\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmitForm}></SearchForm>\n      {films && (\n        <ul className={s.listHome}>\n          {films.map(film => (\n            <li key={film.id} className={s.itemHome}>\n              <Link\n                to={`${film.id}`}\n                state={{ from: location }}\n                className={s.linkHome}\n              >\n                <img\n                  className={s.imgHome}\n                  src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                  alt={film.name}\n                  width=\"150px\"\n                  onError={e => {\n                    e.target.src =\n                      'https://image.shutterstock.com/image-vector/picture-vector-icon-no-image-600w-1350441335.jpg';\n                  }}\n                />\n                <p className={s.titleHome}>{film.title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrending","url","axios","response","data","results","fetchByQuery","query","fetchById","id","fetchCredits","cast","fetchReviews","SearchForm","onSubmit","useSearchParams","searchParams","useState","get","setQuery","className","s","e","preventDefault","trim","toLocaleLowerCase","Notiflix","name","onChange","currentTarget","value","type","autoComplete","autoFocus","placeholder","Movies","setSearchParams","films","setFilms","location","useLocation","useEffect","then","map","film","to","state","from","src","poster_path","alt","width","onError","target","title"],"sourceRoot":""}